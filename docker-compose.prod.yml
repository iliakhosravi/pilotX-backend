version: '3.8'

# Production configuration
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up
services:
  pilotx-api:
    build:
      context: .
      target: production
    restart: always
    environment:
      NODE_ENV: production
      # Production settings
      API_RATE_LIMIT: 5000
      MAX_BATCH_SIZE: 1000
      MAX_BATCH_TIME_MS: 1000
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Production logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongo:
    # Production MongoDB with authentication
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: piloX
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  redis:
    # Production Redis with password
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  rabbitmq:
    # Production RabbitMQ with secure credentials
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: pilotx
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M